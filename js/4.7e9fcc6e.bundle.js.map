{"version":3,"sources":["webpack:///./src/components/content/content.tsx","webpack:///./src/components/content/index.tsx","webpack:///./src/tools/articlesManage.ts","webpack:///./src/pages/category-list/category-list.tsx","webpack:///./src/pages/category-list/index.tsx"],"names":["state","store","dispatch","memo","props","contentWidth","useContentWidth","headerEl","document","getElementById","headerELHeight","getClientRects","height","contentBoxStyle","theme","common","text","bg","contentStyle","css","children","this","init","getInstance","instance","ArticlesManage","_posts","window","localStorage","getItem","articleMap","JSON","parse","deepClone","data","stringify","getArticleDate","article","Date","content","meta","time","replace","stat","birthtime","orderByBirthTimeDesc","articles_desc","articles","result","Object","keys","sort","aKey","bKey","getTime","map","key","id","getArticlesByCategory","category","filter","tags","includes","getArticleById","getAllTags","tagsMap","Array","values","forEach","articleTags","length","tag","count","setHeaderType","headerType","categoryListCss","searchArticles","route","history","push","className","onClick"],"mappings":"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","file":"js/4.7e9fcc6e.bundle.js","sourcesContent":["/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core'\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { StoreState } from '@Types/storeState'\r\nimport useContentWidth from '@Hooks/useContentWidth'\r\n\r\ninterface IProps {\r\n  store: StoreState;\r\n  children?: React.ReactChild\r\n}\r\n\r\nfunction Content (props: IProps) {\r\n  const contentWidth = useContentWidth()\r\n\r\n  const headerEl = document.getElementById('header')\r\n  const headerELHeight = headerEl?.getClientRects()[0].height\r\n\r\n  function getMinHeight() {\r\n    return `calc(100vh - ${headerELHeight || 0}px - 15px)`\r\n  }\r\n\r\n  const contentBoxStyle = css`\r\n    width: 100%;\r\n    height: 100%;\r\n    color: ${props.store.theme.common.text};\r\n    background-color: ${props.store.theme.common.bg};\r\n    min-height: 100vh;\r\n    min-height: ${getMinHeight()};\r\n  `\r\n\r\n  const contentStyle = css`\r\n    box-sizing: border-box;\r\n    margin: 0 auto;\r\n    padding: 1rem 1.5rem 100px;\r\n    width: ${contentWidth};\r\n    height: 100%;\r\n  }`\r\n\r\n  return (\r\n    <div css={contentBoxStyle}>\r\n      <div css={contentStyle}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: any) {\r\n  return {\r\n    store: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch: Dispatch) {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(React.memo(Content))","import Content from './content'\r\nexport default Content","import { ArticleObj, TagsMap } from \"@Types/article\"\r\n\r\ninterface ArticleMap {\r\n  [id: string]: ArticleObj\r\n}\r\n\r\nexport class ArticlesManage {\r\n  static instance: ArticlesManage\r\n  articleMap!: ArticleMap\r\n  static articles_desc: ArticleObj[]\r\n  static tagsMap: TagsMap\r\n\r\n  constructor() {\r\n    this.init()\r\n  }\r\n\r\n  static getInstance() {\r\n    if (!this.instance) {\r\n      this.instance = new ArticlesManage()\r\n    }\r\n    return this.instance\r\n  }\r\n\r\n  init() {\r\n    const _posts = window.localStorage.getItem('_posts') || '{}'\r\n    this.articleMap = JSON.parse(_posts)\r\n  }\r\n\r\n  private deepClone<T>(data: T): T {\r\n    return JSON.parse(JSON.stringify(data || ''))\r\n  }\r\n\r\n  getArticleDate(article: ArticleObj): Date {\r\n    return new Date(article.content.meta.time.replace(/-/g, '/') || article.stat.birthtime)\r\n  }\r\n\r\n  // 按时间倒序排序\r\n  orderByBirthTimeDesc(): ArticleObj[] {\r\n    if (ArticlesManage.articles_desc) {\r\n      return ArticlesManage.articles_desc\r\n    }\r\n    const articles = this.deepClone(this.articleMap)\r\n    const keys = Object.keys(articles).sort((aKey: string, bKey: string) => {\r\n      return this.getArticleDate(articles[bKey]).getTime() - this.getArticleDate(articles[aKey]).getTime()\r\n    })\r\n    const result = keys.map(key => {\r\n      articles[key].id = key\r\n      return articles[key]\r\n    })\r\n    ArticlesManage.articles_desc = result\r\n    return result\r\n  }\r\n\r\n  getArticlesByCategory(category: string): ArticleObj[] {\r\n    const articles = this.orderByBirthTimeDesc()\r\n    return articles.filter((article: ArticleObj) => article.content.meta.tags.includes(category))\r\n  }\r\n\r\n  getArticleById(id: string): ArticleObj {\r\n    return this.deepClone(this.articleMap[id])\r\n  }\r\n\r\n  getAllTags(): TagsMap {\r\n    if (ArticlesManage.tagsMap instanceof Array) {\r\n      return ArticlesManage.tagsMap\r\n    }\r\n    const tagsMap: TagsMap = {}\r\n    const articles = this.deepClone(this.articleMap)\r\n    Object.values<ArticleObj>(articles).forEach((article: ArticleObj) => {\r\n      const articleTags = article.content.meta.tags\r\n      articleTags.length > 0 && articleTags.forEach((tag: string) => {\r\n        tagsMap[tag] ? tagsMap[tag].count++ : tagsMap[tag] = { count: 1 }\r\n      })\r\n    })\r\n    ArticlesManage.tagsMap = tagsMap\r\n    return tagsMap\r\n  }\r\n}\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core'\r\nimport React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { setHeaderTypeAction } from '@Store/actions'\r\nimport { Dispatch } from 'redux'\r\nimport { StoreState } from '@Types/storeState'\r\nimport { ArticlesManage } from '@Tools/articlesManage'\r\nimport useContentWidth from '@Hooks/useContentWidth'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Path, LocationDescriptorObject } from 'history'\r\nimport Content from '@Components/content'\r\n\r\ninterface IProps extends RouteComponentProps {\r\n  store: StoreState\r\n  setHeaderType: (headerType: string) => any\r\n}\r\n\r\nfunction CateoryList(props: IProps) {\r\n  const contentWidth = useContentWidth()\r\n\r\n  const categoryListCss = css`\r\n    .category {\r\n      display: flex;\r\n      justify-content: space-between;\r\n      align-items: center;\r\n      padding: 20px;\r\n\r\n      .tag-name {\r\n        font-size: 1.5rem;\r\n        cursor: pointer;\r\n      }\r\n\r\n      .count {\r\n        display: inline-flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        width: 40px;\r\n        height: 40px;\r\n        border-radius: 50%;\r\n        font-size: 1.5rem;\r\n        background-color: #eee;\r\n      }\r\n    }\r\n  `\r\n\r\n  const articlesManage = ArticlesManage.getInstance()\r\n  const tagsMap = articlesManage.getAllTags()\r\n\r\n  function searchArticles(tag: string) {\r\n    routeTo('/?category=' + tag)\r\n  }\r\n\r\n  function routeTo (route: Path | LocationDescriptorObject) {\r\n    if (typeof route === 'string') {\r\n      props.history.push(route)\r\n    }\r\n  }\r\n  \r\n  return (\r\n    <Content>\r\n      <div css={categoryListCss}>\r\n        {Object.keys(tagsMap).map(tag => (\r\n          <div className=\"category\" key={tag}>\r\n            <span className=\"tag-name\" onClick={() => searchArticles(tag)}>{tag}</span>\r\n            <span className=\"count\">{tagsMap[tag].count}</span>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </Content>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: any) {\r\n  return {\r\n    store: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch: Dispatch) {\r\n  return {\r\n    setHeaderType: (headerType: string) => dispatch(setHeaderTypeAction(headerType))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(React.memo(CateoryList))","import CategoryList from './category-list'\r\nexport default CategoryList"],"sourceRoot":""}