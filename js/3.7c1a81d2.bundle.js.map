{"version":3,"sources":["webpack:///./src/components/content/content.tsx","webpack:///./src/components/content/index.tsx","webpack:///./src/tools/articlesManage.ts","webpack:///./src/components/post-card/post-card.tsx","webpack:///./src/components/post-card/index.tsx","webpack:///./src/pages/HomePage/HomePage.tsx","webpack:///./src/pages/HomePage/index.tsx"],"names":["state","store","dispatch","memo","props","headerEl","contentWidth","useContentWidth","contentBoxStyle","theme","common","text","bg","document","getElementById","getClientRects","height","contentStyle","css","children","this","init","getInstance","instance","ArticlesManage","_posts","window","localStorage","getItem","articleMap","JSON","parse","deepClone","data","stringify","getArticleDate","article","Date","content","meta","time","replace","stat","birthtime","orderByBirthTimeDesc","articles_desc","articles","result","Object","keys","sort","aKey","bKey","getTime","map","key","id","getArticlesByCategory","category","filter","tags","includes","getArticleById","getAllTags","tagsMap","Array","values","forEach","articleTags","length","tag","count","routeTo","bind","toDetail","path","setHeaderType","detail","render","styles","postCard","title","acticleCardTitle","date","home","tagText","tagBg","onClick","name","index","PureComponent","headerType","setCurrentTab","currentTab","postListStyle","articlesManage","querys","location","search","substring","split","some","query","value","route","history","push","post","assign"],"mappings":"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","file":"js/3.7c1a81d2.bundle.js","sourcesContent":["/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core'\r\nimport React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Dispatch } from 'redux'\r\nimport { StoreState } from '@Types/storeState'\r\nimport useContentWidth from '@Hooks/useContentWidth'\r\n\r\ninterface IProps {\r\n  store: StoreState;\r\n  children?: React.ReactChild\r\n}\r\n\r\nfunction Content (props: IProps) {\r\n  const contentWidth = useContentWidth()\r\n\r\n  function getMinHeight() {\r\n    const headerEl = document.getElementById('header')\r\n    return `calc(100vh - ${headerEl?.getClientRects()[0].height || 330}px - 15px)`\r\n  }\r\n\r\n  const contentBoxStyle = css`\r\n    width: 100%;\r\n    height: 100%;\r\n    color: ${props.store.theme.common.text};\r\n    background-color: ${props.store.theme.common.bg};\r\n    min-height: ${getMinHeight()};\r\n  `\r\n\r\n  const contentStyle = css`\r\n    box-sizing: border-box;\r\n    margin: 0 auto;\r\n    padding: 1rem 1.5rem 100px;\r\n    width: ${contentWidth};\r\n    height: 100%;\r\n  }`\r\n\r\n  return (\r\n    <div css={contentBoxStyle}>\r\n      <div css={contentStyle}>\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: any) {\r\n  return {\r\n    store: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch: Dispatch) {\r\n  return {\r\n    \r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(React.memo(Content))","import Content from './content'\r\nexport default Content","import { ArticleObj, TagsMap } from \"@Types/article\"\r\n\r\ninterface ArticleMap {\r\n  [id: string]: ArticleObj\r\n}\r\n\r\nexport class ArticlesManage {\r\n  static instance: ArticlesManage\r\n  articleMap!: ArticleMap\r\n  static articles_desc: ArticleObj[]\r\n  static tagsMap: TagsMap\r\n\r\n  constructor() {\r\n    this.init()\r\n  }\r\n\r\n  static getInstance() {\r\n    if (!this.instance) {\r\n      this.instance = new ArticlesManage()\r\n    }\r\n    return this.instance\r\n  }\r\n\r\n  init() {\r\n    const _posts = window.localStorage.getItem('_posts') || '{}'\r\n    this.articleMap = JSON.parse(_posts)\r\n  }\r\n\r\n  private deepClone<T>(data: T): T {\r\n    return JSON.parse(JSON.stringify(data || ''))\r\n  }\r\n\r\n  getArticleDate(article: ArticleObj): Date {\r\n    return new Date(article.content.meta.time.replace(/-/g, '/') || article.stat.birthtime)\r\n  }\r\n\r\n  // 按时间倒序排序\r\n  orderByBirthTimeDesc(): ArticleObj[] {\r\n    if (ArticlesManage.articles_desc) {\r\n      return ArticlesManage.articles_desc\r\n    }\r\n    const articles = this.deepClone(this.articleMap)\r\n    const keys = Object.keys(articles).sort((aKey: string, bKey: string) => {\r\n      return this.getArticleDate(articles[bKey]).getTime() - this.getArticleDate(articles[aKey]).getTime()\r\n    })\r\n    const result = keys.map(key => {\r\n      articles[key].id = key\r\n      return articles[key]\r\n    })\r\n    ArticlesManage.articles_desc = result\r\n    return result\r\n  }\r\n\r\n  getArticlesByCategory(category: string): ArticleObj[] {\r\n    const articles = this.orderByBirthTimeDesc()\r\n    return articles.filter((article: ArticleObj) => article.content.meta.tags.includes(category))\r\n  }\r\n\r\n  getArticleById(id: string): ArticleObj {\r\n    return this.deepClone(this.articleMap[id])\r\n  }\r\n\r\n  getAllTags(): TagsMap {\r\n    if (ArticlesManage.tagsMap instanceof Array) {\r\n      return ArticlesManage.tagsMap\r\n    }\r\n    const tagsMap: TagsMap = {}\r\n    const articles = this.deepClone(this.articleMap)\r\n    Object.values<ArticleObj>(articles).forEach((article: ArticleObj) => {\r\n      const articleTags = article.content.meta.tags\r\n      articleTags.length > 0 && articleTags.forEach((tag: string) => {\r\n        tagsMap[tag] ? tagsMap[tag].count++ : tagsMap[tag] = { count: 1 }\r\n      })\r\n    })\r\n    ArticlesManage.tagsMap = tagsMap\r\n    return tagsMap\r\n  }\r\n}\r\n","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core'\r\nimport React from 'react'\r\nimport { ArticleObj } from '@Types/article'\r\nimport { Path, LocationDescriptorObject } from 'history'\r\nimport { connect } from 'react-redux'\r\nimport { setHeaderTypeAction } from '@Store/actions'\r\nimport { Dispatch } from 'redux'\r\nimport { StoreState } from '@Types/storeState'\r\n\r\ninterface IProps {\r\n  store: StoreState,\r\n  detail: ArticleObj,\r\n  routeTo: (route: Path | LocationDescriptorObject) => void,\r\n  setHeaderType: (headerType: string) => any\r\n}\r\n\r\ninterface IState {}\r\n\r\nclass PostCard extends React.PureComponent<IProps, IState> {\r\n  constructor(props: IProps) {\r\n    super(props)\r\n    \r\n    this.state = {\r\n      \r\n    }\r\n\r\n    this.routeTo = this.routeTo.bind(this)\r\n    this.toDetail = this.toDetail.bind(this)\r\n  }\r\n\r\n  routeTo (path: Path) {\r\n    this.props.routeTo(path)\r\n  }\r\n\r\n  toDetail () {\r\n    this.props.setHeaderType('article-detail')\r\n    this.routeTo(`/post/${this.props.detail.id}`)\r\n  }\r\n\r\n  render() {\r\n    const styles = {\r\n      postCard: css`\r\n        box-sizing: border-box;\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        margin-top: 2rem;\r\n        padding: 10px 20px;\r\n        width: 100%;\r\n        min-height: 120px;\r\n        border-left: 4px solid transparent;\r\n        transition: all .5s;\r\n\r\n        &:first-of-type {\r\n          margin-top: 0.5rem;\r\n        }\r\n      \r\n        &:hover {\r\n          border-color: #dae0e2;\r\n        }\r\n      `,\r\n      title: css`\r\n        display: block;\r\n        padding: 0 0 10px;\r\n        font-size: 1.5rem;\r\n        word-break: break-word;\r\n        cursor: pointer;\r\n        ${this.props.store.theme.acticleCardTitle ? 'color: ' + this.props.store.theme.acticleCardTitle : ''}\r\n      `,\r\n      date: css`\r\n        color: #606266;\r\n      `,\r\n      tags: css`\r\n        padding: 10px 0 0;\r\n      `,\r\n      tag: css`\r\n        display: inline-block;\r\n        margin-right: 10px;\r\n        margin-bottom: 10px;\r\n        padding: 5px 10px;\r\n        color: ${this.props.store.theme.home.tagText};\r\n        background-color: ${this.props.store.theme.home.tagBg};\r\n        border-radius: 5px;\r\n      `\r\n    }\r\n\r\n    return (\r\n      <div css={styles.postCard}>\r\n        <span css={styles.title} \r\n              onClick={this.toDetail}\r\n        >{this.props.detail.content.meta?.title || this.props.detail.name}</span>\r\n        <span css={styles.date}>{this.props.detail.content.meta?.time || this.props.detail.stat.birthtime.replace(/T.+$/, '')}</span>\r\n        <div css={styles.tags}>\r\n          {this.props.detail.content.meta?.tags.map((tag: string, index: number) => (\r\n            <span css={styles.tag} key={index}>{tag}</span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nfunction mapStateToProps (state: any) {\r\n  return {\r\n    store: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch: Dispatch) {\r\n  return {\r\n    setHeaderType: (headerType: string) => dispatch(setHeaderTypeAction(headerType))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(PostCard)","import PostCard from './post-card'\r\nexport default PostCard","/** @jsx jsx */\r\nimport { css, jsx } from '@emotion/core'\r\nimport React, { useEffect } from 'react'\r\nimport PostCard from '@Components/post-card'\r\nimport { connect } from 'react-redux'\r\nimport { setCurrentTabAction, setHeaderTypeAction } from '@Store/actions'\r\nimport { Dispatch } from 'redux'\r\nimport { StoreState } from '@Types/storeState'\r\nimport { ArticleObj } from '@Types/article'\r\nimport { RouteComponentProps } from 'react-router-dom'\r\nimport { Path, LocationDescriptorObject } from 'history'\r\nimport { ArticlesManage } from '@Tools/articlesManage'\r\nimport useContentWidth from '@Hooks/useContentWidth'\r\nimport Content from '@Components/content'\r\n\r\ninterface IProps extends RouteComponentProps {\r\n  store: StoreState;\r\n  setHeaderType: (headerType: string) => any;\r\n  setCurrentTab: (currentTab: string) => any;\r\n}\r\n\r\nconst boxCss = css`\r\n  display: inline-flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  width: 100px;\r\n  height: 100px;\r\n`\r\n\r\nfunction HomePage (props: IProps) {\r\n  useEffect(() => {\r\n    // 更新标题等信息\r\n    if (props.store.headerType !== 'default') {\r\n      props.setHeaderType('default')\r\n    }\r\n\r\n    if (props.store.currentTab !== '') {\r\n      props.setCurrentTab('')\r\n    }\r\n  }, [])\r\n\r\n  const contentWidth = useContentWidth()\r\n\r\n  const postListStyle = css`\r\n    color: ${props.store.theme.home.text};\r\n  }`\r\n\r\n  const articlesManage = ArticlesManage.getInstance()\r\n\r\n  const querys = props.location.search.substring(1).split('&')\r\n  let category = ''\r\n  querys.some(query => {\r\n    const [key, value] = query.split('=')\r\n    if (key === 'category') {\r\n      category = value\r\n      return true\r\n    }\r\n    return false\r\n  })\r\n\r\n  const _posts = category ? articlesManage.getArticlesByCategory(category) : articlesManage.orderByBirthTimeDesc()\r\n\r\n  const colors = [\r\n    '#fcecdf',\r\n    '#f7f5f6',\r\n    '#f3e1fb',\r\n    '#b0c1ef',\r\n    '#ecdac2',\r\n    '#ceb8aa',\r\n    '#ece9da',\r\n    '#bab1dc',\r\n    '#d9cdf5',\r\n    '#d3e6ec',\r\n    '#ecf0fc',\r\n    '#594c3b',\r\n    '#c1f5ff',\r\n    '#fea5bb',\r\n    '#aa8479',\r\n    '#d4b6ab',\r\n    '#b28ba6',\r\n    '#797993',\r\n    '#5fb4dd',\r\n    '#f7ae83',\r\n    '#b3b9c5',\r\n    '#e8e7ec',\r\n    '#e4ecef',\r\n    '#bedae5',\r\n    '#b00515',\r\n    '#bbcfd0',\r\n    '#fd1a38',\r\n    '#e8cce2',\r\n    '#f8d0d8',\r\n    '#fad5c2',\r\n    '#e9cec3',\r\n    '#e7a0a4',\r\n    '#cbc0c8',\r\n    '#FAEBD7',\r\n    '#DAA520',\r\n    '#2F4F4F',\r\n    '#98FB98',\r\n    '#7B68EE',\r\n    '#00CED1',\r\n  ]\r\n\r\n  function routeTo (route: Path | LocationDescriptorObject) {\r\n    if (typeof route === 'string') {\r\n      props.history.push(route)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Content>\r\n      <div css={postListStyle}>\r\n        {/* <div>\r\n        {colors.map(color => {\r\n           return (\r\n             <div css={boxCss} style={{backgroundColor: color}} key={color}>{color}</div>\r\n           )\r\n        })}\r\n        </div> */}\r\n        \r\n        {_posts.map((post: ArticleObj) => (\r\n          <PostCard key={post.id} detail={Object.assign({}, post)} routeTo={routeTo} />\r\n        ))}\r\n      </div>\r\n    </Content>\r\n  )\r\n}\r\n\r\nfunction mapStateToProps (state: any) {\r\n  return {\r\n    store: state\r\n  }\r\n}\r\n\r\nfunction mapDispatchToProps (dispatch: Dispatch) {\r\n  return {\r\n    setHeaderType: (headerType: string) => dispatch(setHeaderTypeAction(headerType)),\r\n    setCurrentTab: (currentTab: string) => dispatch(setCurrentTabAction(currentTab))\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(React.memo(HomePage))","import HomePage from './HomePage'\r\n\r\nexport default HomePage"],"sourceRoot":""}